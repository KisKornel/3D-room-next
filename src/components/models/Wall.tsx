/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

const filePath = "/3d/wall.glb";

useGLTF.preload(filePath);

type GLTFResult = GLTF & {
  nodes: {
    Walls: THREE.Mesh;
    WallFloorPart: THREE.Mesh;
  };
  materials: {
    Walls: THREE.MeshStandardMaterial;
  };
};

const Wall = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(filePath) as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Walls.geometry}
        material={materials.Walls}
        position={[0, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WallFloorPart.geometry}
        material={materials.Walls}
        position={[0, 0, 0]}
      />
    </group>
  );
};

export default Wall;

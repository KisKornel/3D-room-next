"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

const poster = "/images/poster.jpg";
const oil = "/images/oil.jpg";
const geometric = "/images/geometric.png";
const triangles = "/images/triangles.png";
const filePath = "/3d/images.glb";

type GLTFResult = GLTF & {
  nodes: {
    Pictures4: THREE.Mesh;
    Pictures1: THREE.Mesh;
    Pictures2: THREE.Mesh;
    Pictures3: THREE.Mesh;
    Pictures1Material: THREE.Mesh;
    Pictures2Material: THREE.Mesh;
    Pictures3Material: THREE.Mesh;
  };
  materials: {
    White: THREE.MeshStandardMaterial;
  };
};

const Images = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(filePath) as GLTFResult;

  const [posterImg, oilImg, geometricImg, trianglesImg] = useTexture([
    poster,
    oil,
    geometric,
    triangles,
  ]);

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures4.geometry}
        material={nodes.Pictures4.material}
        position={[-1.261, 0.508, -0.784]}
      >
        <meshStandardMaterial map={posterImg} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures1.geometry}
        material={materials.White}
        position={[-0.436, 0.893, -1.821]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1, 1, 1.057]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures2.geometry}
        material={materials.White}
        position={[-1.323, 0.926, -1.821]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures3.geometry}
        material={materials.White}
        position={[-1.323, 0.307, -1.821]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures1Material.geometry}
        material={materials.White}
        position={[-0.436, 0.893, -1.75]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={[1, 1, 1.057]}
      >
        <meshStandardMaterial map={oilImg} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures2Material.geometry}
        material={materials.White}
        position={[-1.323, 0.926, -1.75]}
        rotation={[Math.PI / 2, 0, Math.PI]}
      >
        <meshStandardMaterial map={geometricImg} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pictures3Material.geometry}
        material={materials.White}
        position={[-1.323, 0.307, -1.75]}
        rotation={[Math.PI / 2, 0, Math.PI]}
      >
        <meshStandardMaterial map={trianglesImg} />
      </mesh>
    </group>
  );
};

useGLTF.preload(filePath);

export default Images;

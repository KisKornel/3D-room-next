"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useMemo, useRef, useState } from "react";
import * as THREE from "three";
import { useCursor, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

const filePath = "/3d/tableLamp.glb";

useGLTF.preload(filePath);

type GLTFResult = GLTF & {
  nodes: {
    TableLamp: THREE.Mesh;
    TableLampAccessories2: THREE.Mesh;
    TableLampAccessories3: THREE.Mesh;
    TableLampAccessories4: THREE.Mesh;
    TableLampAccessories5: THREE.Mesh;
    TableLampAccessories6: THREE.Mesh;
    TableLampAccessories7: THREE.Mesh;
    TableLampAccessories8: THREE.Mesh;
    TableLampAccessories9: THREE.Mesh;
  };
  materials: {
    GreenColor: THREE.MeshStandardMaterial;
  };
};

const SPOT_LIGHT_COLOR = "#fffec8";

const TableLamp = (props: JSX.IntrinsicElements["group"]) => {
  const tableLampRef = useRef<THREE.Group>(null!);

  const [isTableLampLightOn, setIsTableLampLightOn] = useState(true);
  const [hovered, setHovered] = useState(false);

  const { nodes, materials } = useGLTF(filePath) as GLTFResult;

  useCursor(hovered);

  const spotlightTableLamp = useMemo(() => {
    const spotlightTableLamp = new THREE.SpotLight(
      SPOT_LIGHT_COLOR,
      4,
      2,
      Math.PI / 3,
      0.5,
      2
    );
    spotlightTableLamp.castShadow = true;
    spotlightTableLamp.visible = isTableLampLightOn;

    return spotlightTableLamp;
  }, [isTableLampLightOn]);

  const handleTableLapmOnClick = () => {
    setIsTableLampLightOn(() => !isTableLampLightOn);
  };

  return (
    <group
      {...props}
      ref={tableLampRef}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      onClick={handleTableLapmOnClick}
      dispose={null}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TableLamp.geometry}
        material={materials.GreenColor}
        position={[1.744, -0.74, -1.554]}
        rotation={[Math.PI, -0.705, Math.PI]}
        scale={1.145}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories2.geometry}
          material={materials.GreenColor}
          position={[-0.048, 0.168, 0]}
          rotation={[Math.PI, 0, -0.392]}
          scale={[0.011, 0.114, 0.011]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories3.geometry}
          material={materials.GreenColor}
          position={[-0.092, 0.275, 0]}
          rotation={[Math.PI / 2, 0.136, Math.PI]}
          scale={[0.025, 0.021, 0.025]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories4.geometry}
          material={materials.GreenColor}
          position={[-0.005, 0.366, 0]}
          rotation={[Math.PI, 0, 0.774]}
          scale={[0.011, 0.114, 0.011]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories5.geometry}
          material={materials.GreenColor}
          position={[0.075, 0.45, 0]}
          rotation={[Math.PI / 2, 0.136, Math.PI]}
          scale={[0.025, 0.021, 0.025]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories6.geometry}
          material={materials.GreenColor}
          position={[0.126, 0.462, 0]}
          rotation={[-Math.PI, 0, 1.342]}
          scale={[0.011, 0.036, 0.011]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories7.geometry}
          material={materials.GreenColor}
          position={[0, 0.051, 0]}
          scale={0.023}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories8.geometry}
          material={materials.GreenColor}
          position={[0.242, 0.407, 0.001]}
          rotation={[0.038, 0.077, 0.249]}
        >
          <primitive object={spotlightTableLamp} position={[0.001, 0.002, 0]} />
          <primitive
            object={spotlightTableLamp.target}
            position={[0.001, -1.002, 0]}
          />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLampAccessories9.geometry}
          material={materials.GreenColor}
          position={[0.186, 0.462, 0]}
          rotation={[0, 0, 0.978]}
          scale={0.382}
        />
      </mesh>
    </group>
  );
};

export default TableLamp;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

const filePath = "/3d/window.glb";

useGLTF.preload(filePath);

type GLTFResult = GLTF & {
  nodes: {
    WindowFrame: THREE.Mesh;
    Cube009: THREE.Mesh;
    Cube009_1: THREE.Mesh;
    Cube010: THREE.Mesh;
    Cube010_1: THREE.Mesh;
    WindowShutter: THREE.Mesh;
    WindowShutterBottom: THREE.Mesh;
    WindowShutterTop: THREE.Mesh;
  };
  materials: {
    White: THREE.MeshStandardMaterial;
    WindowWhiteLight: THREE.MeshStandardMaterial;
    ShadeMaterial: THREE.MeshPhysicalMaterial;
  };
};

const Window = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(filePath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WindowFrame.geometry}
        material={materials.White}
        position={[0.954, 0.694, -1.914]}
      />
      <group position={[0.954, 1.207, -1.914]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials.White}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube009_1.geometry}
          material={materials.WindowWhiteLight}
        />
      </group>
      <group position={[0.954, 0.185, -1.987]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials.White}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube010_1.geometry}
          material={materials.WindowWhiteLight}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WindowShutter.geometry}
        material={materials.ShadeMaterial}
        position={[0.954, 0.694, -1.83]}
        scale={[1, 1, 0.065]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WindowShutterBottom.geometry}
        material={materials.White}
        position={[0.954, 0.467, -1.83]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.017, 0.746, 0.017]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WindowShutterTop.geometry}
        material={materials.White}
        position={[0.954, 1.663, -1.83]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.051, 0.746, 0.051]}
      />
    </group>
  );
};

export default Window;

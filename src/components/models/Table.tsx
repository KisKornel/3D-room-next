/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

const filePath = "/3d/table.glb";

useGLTF.preload(filePath);

type GLTFResult = GLTF & {
  nodes: {
    TableTop1: THREE.Mesh;
    DrawerHandle1: THREE.Mesh;
    DrawerHandle2: THREE.Mesh;
    DrawerHandle3: THREE.Mesh;
    DrawerHandle4: THREE.Mesh;
    Drawers: THREE.Mesh;
    TableLeg: THREE.Mesh;
  };
  materials: {
    BrownColor: THREE.MeshStandardMaterial;
    DrawerHandleColor: THREE.MeshStandardMaterial;
  };
};

const Table = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF(filePath) as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TableTop1.geometry}
        material={materials.BrownColor}
        position={[1.026, -0.8, -1.232]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.DrawerHandle1.geometry}
          material={materials.DrawerHandleColor}
          position={[0.551, -0.237, 0.55]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.028, 0.011, 0.028]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.DrawerHandle2.geometry}
          material={materials.DrawerHandleColor}
          position={[0.551, -0.498, 0.55]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.028, 0.011, 0.028]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.DrawerHandle3.geometry}
          material={materials.DrawerHandleColor}
          position={[0.551, -0.748, 0.55]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.028, 0.011, 0.028]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.DrawerHandle4.geometry}
          material={materials.DrawerHandleColor}
          position={[0.551, -1.002, 0.55]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.028, 0.011, 0.028]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Drawers.geometry}
          material={materials.BrownColor}
          position={[0.551, -0.498, 0.372]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.TableLeg.geometry}
          material={materials.BrownColor}
        />
      </mesh>
    </group>
  );
};

export default Table;
